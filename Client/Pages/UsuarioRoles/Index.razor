@page "/roles"
<h1>Registro de roles</h1>
<br>
<button class="btn btn-outline-primary" @onclick="Agregar">Agregar</button>
<br>



@if(Roles != null)
{
    <br>
<table class="table table-hover table-dark">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Cargo</th>
            <th scope="col">Permiso para Crear</th>
            <th scope="col">Permiso para Editar</th>
            <th scope="col">Permiso para Eliminar</th>
            
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach(var rol in Roles)
        {
            <tr>
                <th scope="row">@rol.Id</th>
                <th scope="row">@rol.Nombre</th>
                <th scope="row">@rol.PermisoParaCrear</th>
                <th scope="row">@rol.PermisoParaEditar</th>
                <th scope="row">@rol.PermisoParaEliminar</th>
                <th scope="row"><button class="btn btn-outline-warning " @onclick="()=>Editar(rol.Id)">Editar</button></th>
                <th scope="row"><button class="btn btn-outline-danger " @onclick="()=>Eliminar(rol.Id)">Eliminar</button></th> 
            </tr>
        }
    </tbody>
</table>
}
else
{
   <p>Cargando...</p>
}

<br>









@code
{
    public List<UsuarioRolRecord>? Roles {get; set;}
    
    protected override async Task OnInitializedAsync()
    {
        var response = await rolesManager.GetAsync();
        if(response.Succeeded)
        {
            Roles = response.Items.ToList();
        }
    }

    public void Agregar()
    {
        urlHelper.NavigateTo("/rol/crear",false);
    }

    public void Editar(int Id)
    {
        urlHelper.NavigateTo($"/rol/editar/{Id}",false);
    }

        public void Eliminar(int Id)
    {
        urlHelper.NavigateTo($"/reservas/eliminar/{Id}",false);
    }
}